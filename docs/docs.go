// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/trailer_api/stats/insert_sdk_event": {
            "post": {
                "description": "Insert SdkEvent",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SdkEvent"
                ],
                "summary": "Insert SdkEvent",
                "operationId": "Insert SdkEvent",
                "parameters": [
                    {
                        "description": "Event",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stats_service.SdkEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/trailer_api/trailer/get_trailers": {
            "post": {
                "description": "Get TrailerList",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Get TrailerList",
                "operationId": "Get TrailerList",
                "parameters": [
                    {
                        "description": "TrailerListParam",
                        "name": "TotalRegionUV",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gredis.TrailerListParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "gredis.TrailerListParam": {
            "type": "object"
        },
        "stats_service.SdkEvent": {
            "type": "object",
            "required": [
                "app_name",
                "app_version_code",
                "app_version_name",
                "channel_code",
                "client_time",
                "device_model",
                "device_no",
                "event_kv_json",
                "event_name",
                "imei",
                "net_type",
                "newevent_type",
                "newsession_id",
                "os_version_code",
                "os_version_name",
                "screen_height",
                "screen_width",
                "sdk_name",
                "sdk_version_code",
                "sdk_version_name"
            ],
            "properties": {
                "app_name": {
                    "type": "string"
                },
                "app_version_code": {
                    "type": "string"
                },
                "app_version_name": {
                    "type": "string"
                },
                "channel_code": {
                    "type": "string"
                },
                "client_time": {
                    "type": "string"
                },
                "device_brand": {
                    "type": "string"
                },
                "device_model": {
                    "type": "string"
                },
                "device_no": {
                    "type": "string"
                },
                "event_kv_json": {
                    "type": "string"
                },
                "event_name": {
                    "type": "string"
                },
                "imei": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "net_type": {
                    "type": "string"
                },
                "newevent_type": {
                    "type": "integer"
                },
                "newpuid": {
                    "description": "IDFA string ` + "`" + `json:\"idfa\" ` + "`" + `",
                    "type": "string"
                },
                "newsession_id": {
                    "type": "string"
                },
                "os_version_code": {
                    "type": "string"
                },
                "os_version_name": {
                    "type": "string"
                },
                "page_name": {
                    "type": "string"
                },
                "screen_height": {
                    "type": "integer"
                },
                "screen_width": {
                    "type": "integer"
                },
                "sdk_name": {
                    "type": "string"
                },
                "sdk_version_code": {
                    "type": "string"
                },
                "sdk_version_name": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
